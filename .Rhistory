subset(dataDF, Date == "2007/02/01")
subset(dataDF, as.char(Date) == "2007/02/01")
subset(dataDF, as.character(Date) == "2007/02/01")
dataDF[dataDF$Date == "2007/02/01",]
head(dataDF)
subDF <- subset(dataDF, as.character(Date) == c("01/02/2007", "02/02/2007"))
subDF <- subset(dataDF, as.character(Date) == "01/02/2007")
subDF
dataDF[dataDF$Date == "01/02/2007",]
dataDF[dataDF$Date == "16/12/2006",]
dataDF[dataDF$Date == "02/02/2007",]
dataDF[dataDF$Date == "01/02/2007",]
dataDF[dataDF$Date == c("1/2/2007", "2/2/2007"),]
?as.Date
subset(dataDF, Date == "1/2/2007")
subset(dataDF, Date == ("1/2/2007" | "2/2/2007"))
subset(dataDF, Date == "1/2/2007" | "2/2/2007")
subset(dataDF, Date %in% c("1/2/2007", "2/2/2007"))
subDF <- subset(dataDF, Date %in% c("1/2/2007", "2/2/2007"))
dim(subDF)
subDF$Date <- as.Date(subDF$Date, "%d/%m/%y")
class(subDF)
class(subDF$Date)
head(subDF$Date)
subDF <- subset(dataDF, Date %in% c("1/2/2007", "2/2/2007"))
head(subDF$Date)
subDF$Date <- as.character.Date(subDF$Date, "%d/%m/%y")
subDF$Date <- as.character(as.Date(subDF$Date, "%d/%m/%y"))
head(subDF$Date)
as.Date("1/2/2007", "%d/%m/%y")
as.Date("1/2/2007", "%d/%m/%Y")
subDF$Date <- as.Date(subDF$Date, "%d/%m/%Y")
str(subDF$Date)
subDF$Date
subDF <- subset(dataDF, Date %in% c("1/2/2007", "2/2/2007"))
subDF$Date <- as.Date(subDF$Date, "%d/%m/%Y")
head(subDF$Date)
str(subDF$Date)
summary(subDF$Date)
?strptime
subDF$Date <- as.POSIXct(paste(subDF$Date, subDF$Time), format="%d-%m-%Y %H:%M:%S")
head(subDF$Date)
subDF <- subset(dataDF, Date %in% c("1/2/2007", "2/2/2007"))
testDF <- subDF
testDF$Date <- as.POSIXct(paste(subDF$Date, subDF$Time), format="%d/%m/%YYYY %H:%M:%S")
head(testDF$Date)
as.POSIXct(paste(subDF$Date, subDF$Time), format="%d/%m/%YYYY %H:%M:%S")
head(as.POSIXct(paste(subDF$Date, subDF$Time), format="%d/%m/%YYYY %H:%M:%S"))
head(as.POSIXct(paste(subDF$Date), format="%d/%m/%YYYY"))
head(as.POSIXct(subDF$Date, format="%d/%m/%YYYY"))
head(as.POSIXct(subDF$Date, format="%d/%m/%Y"))
head(as.POSIXct(paste(subDF$Date, subDF$Time), format="%d/%m/%Y %H:%M:%S"))
View(head(subDF))
View(head(subDF), 50)
View(head(subDF, 50))
testDF$Date <- as.POSIXct(paste(subDF$Date, subDF$Time), format="%d/%m/%Y %H:%M:%S"))
testDF$Date <- as.POSIXct(paste(subDF$Date, subDF$Time), format="%d/%m/%Y %H:%M:%S")
View(head(testDF, 50))
subDF <- subset(dataDF, Date %in% c("1/2/2007", "2/2/2007"))
subDF$Date <- as.POSIXct(paste(subDF$Date, subDF$Time), format ="%d/%m/%Y %H:%M:%S")
View(head(subDF, 100))
subDF <- subDF[,-2]
View(head(subDF, 100))
class(subDF$Date)
?POSIXct
subDF <- subset(dataDF, Date %in% c("1/2/2007", "2/2/2007"))
# Merging date and time and converting to POSIXct
subDF$Date <- as.POSIXct(with(subDF, paste(Date, Time)), format ="%d/%m/%Y %H:%M:%S")
subDF <- subDF[,-2]
View(head(subDF, 100))
complete.cases(subDF)
summary(subDF)
summary(dataDF)
summary(subDF)
hist(subDF$Global_active_power, col = "red")
hist(subDF$Global_active_power, col = "red", main = "Global Active Power", xlab = "Global Active Power (kilowatts")
hist(subDF$Global_active_power, col = "red", main = "Global Active Power", xlab = "Global Active Power (kilowatts)")
png(file = "plot1.png")
hist(subDF$Global_active_power, col = "red", main = "Global Active Power",
xlab = "Global Active Power (kilowatts)")
dev.off()
?png
?line
?plot
dataDF <- read.table(file = "./data/household_power_consumption.txt", header = TRUE,
sep = ";", na.strings = "?")
powerDF <- subset(dataDF, Date %in% c("1/2/2007", "2/2/2007"))
# Merging date and time and converting to POSIXct
powerDF$Date <- as.POSIXct(with(powerDF, paste(Date, Time)), format ="%d/%m/%Y %H:%M:%S")
powerDF <- powerDF[,-2] # Dropping Time column
# Creating PNG device
png(file = "plot1.png", width = 480, height = 480, units = "px")
# Creating histogram of Global active power
hist(powerDF$Global_active_power, col = "red", main = "Global Active Power",
xlab = "Global Active Power (kilowatts)")
# Closing device
dev.off()
plot(powerDF$Date, powerDF$Global_active_power)
plot(powerDF$Date, powerDF$Global_active_power, type = 1)
plot(powerDF$Date, powerDF$Global_active_power, type = "1")
?plot
plot(powerDF$Date, powerDF$Global_active_power, type = "l")
plot(powerDF$Date, powerDF$Global_active_power, type = "l", ylab = "Global Active Power (kilowatts)")
#####PLOT 2
# Creating PNG device
png(file = "plot2.png", width = 480, height = 480, units = "px")
# Creating histogram of Global active power
plot(powerDF$Date, powerDF$Global_active_power, type = "l",
ylab = "Global Active Power (kilowatts)")
# Closing device
dev.off()
# Creating PNG device
png(file = "plot2.png", width = 480, height = 480, units = "px")
# Creating histogram of Global active power
plot(powerDF$Date, powerDF$Global_active_power, type = "l",
xlab = "", ylab = "Global Active Power (kilowatts)")
# Closing device
dev.off()
plot(powerDF$Date, powerDF$Sub_metering_1, type = "l", ylab = "Energy sub metering")
lines(powerDF$Date, powerDF$Sub_metering_2, col = "red")
lines(powerDF$Date, powerDF$Sub_metering_3, col = "blue")
?legend
legend("topright", legend = c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3"))
legend("topright", legend = c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3"), lty = c(1,1))
legend("topright", legend = c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3"), lty = c(1,1), col = c("Black", "Red", "Blue"))
#####PLOT 3
# Creating PNG device
png(file = "plot2.png", width = 480, height = 480, units = "px")
# Creating line plot
plot(powerDF$Date, powerDF$Sub_metering_1, type = "l",
xlab = "", ylab = "Energy sub metering")
lines(powerDF$Date, powerDF$Sub_metering_2, col = "red")
lines(powerDF$Date, powerDF$Sub_metering_3, col = "blue")
legend("topright", legend = c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3"),
lty = c(1,1), col = c("Black", "Red", "Blue"))
# Closing device
dev.off()
#####PLOT 3
# Creating PNG device
png(file = "plot3.png", width = 480, height = 480, units = "px")
# Creating line plot
plot(powerDF$Date, powerDF$Sub_metering_1, type = "l",
xlab = "", ylab = "Energy sub metering")
lines(powerDF$Date, powerDF$Sub_metering_2, col = "red")
lines(powerDF$Date, powerDF$Sub_metering_3, col = "blue")
legend("topright", legend = c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3"),
lty = c(1,1), col = c("Black", "Red", "Blue"))
# Closing device
dev.off()
?png
# Creating PNG device
png(file = "plot1.png", width = 480, height = 480, units = "px", bg = "grey")
# Creating histogram of Global active power
hist(powerDF$Global_active_power, col = "red", main = "Global Active Power",
xlab = "Global Active Power (kilowatts)")
# Closing device
dev.off()
?hist
?png
par("bg")
class(par("bg"))
names(par)
names(bg)
names(par("bg"))
# Creating PNG device
png(file = "plot1.png", width = 480, height = 480, units = "px",
bg = "transparent")
# Creating histogram of Global active power
hist(powerDF$Global_active_power, col = "red", main = "Global Active Power",
xlab = "Global Active Power (kilowatts)")
# Closing device
dev.off()
#####PLOT 1
# Creating PNG device
png(file = "plot1.png", width = 480, height = 480, units = "px",
bg = "transparent")
# Creating histogram of Global active power
hist(powerDF$Global_active_power, col = "red", main = "Global Active Power",
xlab = "Global Active Power (kilowatts)")
# Closing device
dev.off()
#####PLOT 2
# Creating PNG device
png(file = "plot2.png", width = 480, height = 480, units = "px",
bg = "transparent")
# Creating line plot
plot(powerDF$Date, powerDF$Global_active_power, type = "l",
xlab = "", ylab = "Global Active Power (kilowatts)")
# Closing device
dev.off()
#####PLOT 3
# Creating PNG device
png(file = "plot3.png", width = 480, height = 480, units = "px",
bg = "transparent")
# Creating line plot
plot(powerDF$Date, powerDF$Sub_metering_1, type = "l",
xlab = "", ylab = "Energy sub metering")
lines(powerDF$Date, powerDF$Sub_metering_2, col = "red")
lines(powerDF$Date, powerDF$Sub_metering_3, col = "blue")
legend("topright", legend = c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3"),
lty = c(1,1), col = c("Black", "Red", "Blue"))
# Closing device
dev.off()
?plot
#####PLOT 3
# Creating PNG device
png(file = "plot3.png", width = 480, height = 480, units = "px",
bg = "transparent")
# Creating line plot
plot(powerDF$Date, powerDF$Sub_metering_1, type = "l",
xlab = "", ylab = "Energy sub metering", mar = c(2,3,2,2))
lines(powerDF$Date, powerDF$Sub_metering_2, col = "red")
lines(powerDF$Date, powerDF$Sub_metering_3, col = "blue")
legend("topright", legend = c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3"),
lty = c(1,1), col = c("Black", "Red", "Blue"))
# Closing device
dev.off()
# Creating PNG device
png(file = "plot3.png", width = 480, height = 480, units = "px",
bg = "transparent")
# Creating line plot
plot(powerDF$Date, powerDF$Sub_metering_1, type = "l",
xlab = "", ylab = "Energy sub metering", mar = c(1,2,1,1))
lines(powerDF$Date, powerDF$Sub_metering_2, col = "red")
lines(powerDF$Date, powerDF$Sub_metering_3, col = "blue")
legend("topright", legend = c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3"),
lty = c(1,1), col = c("Black", "Red", "Blue"))
# Closing device
dev.off()
?mar
# Creating PNG device
png(file = "plot3.png", width = 480, height = 480, units = "px",
bg = "transparent")
# Creating line plot
plot(powerDF$Date, powerDF$Sub_metering_1, type = "l",
xlab = "", ylab = "Energy sub metering", mar = c(5,2,1,1))
lines(powerDF$Date, powerDF$Sub_metering_2, col = "red")
lines(powerDF$Date, powerDF$Sub_metering_3, col = "blue")
legend("topright", legend = c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3"),
lty = c(1,1), col = c("Black", "Red", "Blue"))
# Closing device
dev.off()
# Creating line plot
plot(powerDF$Date, powerDF$Sub_metering_1, type = "l",
xlab = "", ylab = "Energy sub metering", mar = c(1,2,1,1))
lines(powerDF$Date, powerDF$Sub_metering_2, col = "red")
lines(powerDF$Date, powerDF$Sub_metering_3, col = "blue")
legend("topright", legend = c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3"),
lty = c(1,1), col = c("Black", "Red", "Blue"))
# Creating line plot
plot(powerDF$Date, powerDF$Sub_metering_1, type = "l",
xlab = "", ylab = "Energy sub metering", mar = c(2,2,1,1))
lines(powerDF$Date, powerDF$Sub_metering_2, col = "red")
lines(powerDF$Date, powerDF$Sub_metering_3, col = "blue")
legend("topright", legend = c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3"),
lty = c(1,1), col = c("Black", "Red", "Blue"))
# Creating line plot
plot(powerDF$Date, powerDF$Sub_metering_1, type = "l",
xlab = "", ylab = "Energy sub metering", mar = c(7,2,1,1))
lines(powerDF$Date, powerDF$Sub_metering_2, col = "red")
lines(powerDF$Date, powerDF$Sub_metering_3, col = "blue")
legend("topright", legend = c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3"),
lty = c(1,1), col = c("Black", "Red", "Blue"))
# Creating line plot
plot(powerDF$Date, powerDF$Sub_metering_1, type = "l",
xlab = "", ylab = "Energy sub metering", mar = c(7,2,1,1))
lines(powerDF$Date, powerDF$Sub_metering_2, col = "red")
lines(powerDF$Date, powerDF$Sub_metering_3, col = "blue")
legend("topright", legend = c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3"),
lty = c(1,1), col = c("Black", "Red", "Blue"))
par(mar = c(2,2,1,1))
plot(powerDF$Date, powerDF$Sub_metering_1, type = "l",
xlab = "", ylab = "Energy sub metering")
lines(powerDF$Date, powerDF$Sub_metering_2, col = "red")
lines(powerDF$Date, powerDF$Sub_metering_3, col = "blue")
legend("topright", legend = c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3"),
lty = c(1,1), col = c("Black", "Red", "Blue"))
# Creating PNG device
png(file = "plot3.png", width = 480, height = 480, units = "px",
bg = "transparent")
par(mar = c(2,2,1,1))
# Creating line plot
plot(powerDF$Date, powerDF$Sub_metering_1, type = "l",
xlab = "", ylab = "Energy sub metering")
lines(powerDF$Date, powerDF$Sub_metering_2, col = "red")
lines(powerDF$Date, powerDF$Sub_metering_3, col = "blue")
legend("topright", legend = c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3"),
lty = c(1,1), col = c("Black", "Red", "Blue"))
# Closing device
dev.off()
# Creating PNG device
png(file = "plot3.png", width = 480, height = 480, units = "px",
bg = "transparent")
par(mar = c(3,4,2,1))
# Creating line plot
plot(powerDF$Date, powerDF$Sub_metering_1, type = "l",
xlab = "", ylab = "Energy sub metering")
lines(powerDF$Date, powerDF$Sub_metering_2, col = "red")
lines(powerDF$Date, powerDF$Sub_metering_3, col = "blue")
legend("topright", legend = c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3"),
lty = c(1,1), col = c("Black", "Red", "Blue"))
# Closing device
dev.off()
# Creating PNG device
png(file = "plot3.png", width = 480, height = 480, units = "px",
bg = "transparent")
par(mar = c(3,3,3,1))
# Creating line plot
plot(powerDF$Date, powerDF$Sub_metering_1, type = "l",
xlab = "", ylab = "Energy sub metering")
lines(powerDF$Date, powerDF$Sub_metering_2, col = "red")
lines(powerDF$Date, powerDF$Sub_metering_3, col = "blue")
legend("topright", legend = c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3"),
lty = c(1,1), col = c("Black", "Red", "Blue"))
# Closing device
dev.off()
par(mar = c(3,3,3,1))
# Creating line plot
plot(powerDF$Date, powerDF$Sub_metering_1, type = "l",
xlab = "", ylab = "Energy sub metering")
lines(powerDF$Date, powerDF$Sub_metering_2, col = "red")
lines(powerDF$Date, powerDF$Sub_metering_3, col = "blue")
legend("topright", legend = c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3"),
lty = c(1,1), col = c("Black", "Red", "Blue"))
par(mar = c(3,4,3,1))
# Creating line plot
plot(powerDF$Date, powerDF$Sub_metering_1, type = "l",
xlab = "", ylab = "Energy sub metering")
lines(powerDF$Date, powerDF$Sub_metering_2, col = "red")
lines(powerDF$Date, powerDF$Sub_metering_3, col = "blue")
legend("topright", legend = c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3"),
lty = c(1,1), col = c("Black", "Red", "Blue"))
# Creating PNG device
png(file = "plot3.png", width = 480, height = 480, units = "px",
bg = "transparent")
par(mar = c(3,4,3,1))
# Creating line plot
plot(powerDF$Date, powerDF$Sub_metering_1, type = "l",
xlab = "", ylab = "Energy sub metering")
lines(powerDF$Date, powerDF$Sub_metering_2, col = "red")
lines(powerDF$Date, powerDF$Sub_metering_3, col = "blue")
legend("topright", legend = c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3"),
lty = c(1,1), col = c("Black", "Red", "Blue"))
# Closing device
dev.off()
source('~/DataScience/GitHub/ExData_Plotting1/expAnalysis1.R')
getwd()
plot1()
png(file = "plot4.png", width = 480, height = 480, units = "px",
bg = "transparent")
# Defining graph layout
par(mfrow = c(2,2))
# Downloading and extracting file
fileURL <- "https://d396qusza40orc.cloudfront.net/exdata%2Fdata%2Fhousehold_power_consumption.zip"
download.file(fileURL, dest="dataset.zip", mode="wb")
unzip ("dataset.zip", exdir = "./data/")
# Reading file to dataframe
dataDF <- read.table(file = "./data/household_power_consumption.txt", header = TRUE,
sep = ";", na.strings = "?")
powerDF <- subset(dataDF, Date %in% c("1/2/2007", "2/2/2007"))
# Merging date and time and converting to POSIXct
powerDF$Date <- as.POSIXct(with(powerDF, paste(Date, Time)), format ="%d/%m/%Y %H:%M:%S")
powerDF <- powerDF[,-2] # Dropping Time column
dev.off()
par(mfrow = c(2,2))
lot(powerDF$Date, powerDF$Global_active_power, type = "l",
xlab = "", ylab = "Global Active Power (kilowatts)")
plot(powerDF$Date, powerDF$Global_active_power, type = "l",
xlab = "", ylab = "Global Active Power (kilowatts)")
# Creating line plot
plot(powerDF$Date, powerDF$Sub_metering_1, type = "l",
xlab = "", ylab = "Energy sub metering")
lines(powerDF$Date, powerDF$Sub_metering_2, col = "red")
lines(powerDF$Date, powerDF$Sub_metering_3, col = "blue")
legend("topright", legend = c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3"),
lty = c(1,1), col = c("Black", "Red", "Blue"))
plot(powerDF$Date, powerDF$Voltage, type = "l", xlab = "voltage",)
plot(powerDF$Date, powerDF$Global_reactive_power, type = "l",
xlab = "datetime", ylab = y)
?plot
# Creating Global Reactive Power line plot
plot(powerDF$Date, powerDF$Global_reactive_power, type = "l",
xlab = "datetime", ylab = "Global_reactive_power")
source('~/DataScience/GitHub/ExData_Plotting1/expAnalysis1.R')
# Defining graph layout
par(mfrow = c(2,2))
# Creating PNG device
png(file = "plot4.png", width = 480, height = 480, units = "px",
bg = "transparent")
# Creating Global Active Power line plot
plot(powerDF$Date, powerDF$Global_active_power, type = "l",
xlab = "", ylab = "Global Active Power (kilowatts)")
# Creating Voltage line plot
plot(powerDF$Date, powerDF$Voltage, type = "l", xlab = "datetime",
ylab = "Voltage")
# Creating Energy sub metering line plot
plot(powerDF$Date, powerDF$Sub_metering_1, type = "l",
xlab = "", ylab = "Energy sub metering")
lines(powerDF$Date, powerDF$Sub_metering_2, col = "red")
lines(powerDF$Date, powerDF$Sub_metering_3, col = "blue")
legend("topright", legend = c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3"),
lty = c(1,1), col = c("Black", "Red", "Blue"))
# Creating Global Reactive Power line plot
plot(powerDF$Date, powerDF$Global_reactive_power, type = "l",
xlab = "datetime", ylab = "Global_reactive_power")
# Closing device
dev.off()
# Creating PNG device
png(file = "plot4.png", width = 480, height = 480, units = "px",
bg = "transparent")
# Defining graph layout
par(mfrow = c(2,2))
# Creating Global Active Power line plot
plot(powerDF$Date, powerDF$Global_active_power, type = "l",
xlab = "", ylab = "Global Active Power (kilowatts)")
# Creating Voltage line plot
plot(powerDF$Date, powerDF$Voltage, type = "l", xlab = "datetime",
ylab = "Voltage")
# Creating Energy sub metering line plot
plot(powerDF$Date, powerDF$Sub_metering_1, type = "l",
xlab = "", ylab = "Energy sub metering")
lines(powerDF$Date, powerDF$Sub_metering_2, col = "red")
lines(powerDF$Date, powerDF$Sub_metering_3, col = "blue")
legend("topright", legend = c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3"),
lty = c(1,1), col = c("Black", "Red", "Blue"))
# Creating Global Reactive Power line plot
plot(powerDF$Date, powerDF$Global_reactive_power, type = "l",
xlab = "datetime", ylab = "Global_reactive_power")
# Closing device
dev.off()
source('~/DataScience/GitHub/ExData_Plotting1/expAnalysis1.R')
file.exists("./data")
file.exists("./data/ass.txt")
?download.file
source('~/DataScience/GitHub/ExData_Plotting1/expAnalysis1.R')
source('~/DataScience/GitHub/ExData_Plotting1/plot1.R')
source('~/DataScience/GitHub/ExData_Plotting1/plot2.R')
source('~/DataScience/GitHub/ExData_Plotting1/plot3.R')
source('~/DataScience/GitHub/ExData_Plotting1/plot4.R')
source('~/DataScience/GitHub/ExData_Plotting1/plot1.R')
source('~/DataScience/GitHub/ExData_Plotting1/plot4.R')
source('~/DataScience/GitHub/ExData_Plotting1/plot3.R')
source('~/DataScience/GitHub/ExData_Plotting1/plot2.R')
source('~/DataScience/GitHub/ExData_Plotting1/plot3.R')
source('~/DataScience/GitHub/ExData_Plotting1/plot4.R')
source('~/DataScience/GitHub/ExData_Plotting1/plot4.R')
source('~/DataScience/GitHub/ExData_Plotting1/plot3.R')
plot1()
print("Hey")
source('~/DataScience/GitHub/ExData_Plotting1/plot4.R')
source('~/DataScience/GitHub/ExData_Plotting1/plot4.R')
plot4()
message("Hey there")
source('~/DataScience/GitHub/ExData_Plotting1/plot4.R')
source('~/DataScience/GitHub/ExData_Plotting1/plot3.R')
source('~/DataScience/GitHub/ExData_Plotting1/plot1.R')
source('~/DataScience/GitHub/ExData_Plotting1/plot2.R')
source('~/DataScience/GitHub/ExData_Plotting1/plot3.R')
source('~/DataScience/GitHub/ExData_Plotting1/plot2.R')
source('~/DataScience/GitHub/ExData_Plotting1/plot1.R')
plot4()
?read.table
dataDF <- read.table(file = "./data/household_power_consumption.txt", header = TRUE,
sep = ";", na.strings = "?", nrows = 1)
dataDF
continue <- as.logical(TRUE)
continue
source('~/DataScience/GitHub/ExData_Plotting1/plot1.R')
source('~/DataScience/GitHub/ExData_Plotting1/plot1.R')
continue <- as.logical(TRUE)
counter <- 1
while(continue){
dataDF <- read.table(file = "./data/household_power_consumption.txt",
header = TRUE, sep = ";", na.strings = "?",
skip = counter-1, nrows = counter)
if (dataDF$Date %in% c("1/2/2017", "2/2/2017")){
powerDF <- rbind(powerDF, dataDF[counter,])
} else if (dataDF$Date == "3/2/2017"){continue=FALSE}
counter <- counter + 1
}
dataDF <- read.table(file = "./data/household_power_consumption.txt",
header = TRUE, sep = ";", na.strings = "?",
skip = 1-1, nrows = 1)
dataDF
if (dataDF[1,1] %in% c("1/2/2017", "2/2/2017")){print("Hello")}
continue <- as.logical(TRUE)
counter <- 1
while(continue){
dataDF <- read.table(file = "./data/household_power_consumption.txt",
header = TRUE, sep = ";", na.strings = "?",
skip = counter-1, nrows = counter)
if (dataDF[1,1] %in% c("1/2/2017", "2/2/2017")){
powerDF <- rbind(powerDF, dataDF[counter,])
} else if (dataDF$Date == "3/2/2017"){continue=FALSE}
counter <- counter + 1
}
source('~/DataScience/GitHub/ExData_Plotting1/plot1.R')
continue <- as.logical(TRUE)
counter <- 1
while(continue){
dataDF <- read.table(file = "./data/household_power_consumption.txt",
header = TRUE, sep = ";", na.strings = "?",
skip = counter-1, nrows = counter)
if (dataDF[1,1] %in% c("1/2/2017", "2/2/2017")){
powerDF <- rbind(powerDF, dataDF[counter,])
} else if (dataDF[1,1] == "3/2/2017"){continue=FALSE}
counter <- counter + 1
}
powerDF
dim(powerDF)
head(powerDF)
source('~/DataScience/GitHub/ExData_Plotting1/plot1.R')
